/*
 * This file is generated by jOOQ.
 */
package db;


import db.tables.FlywaySchemaHistory;
import db.tables.Invoices;
import db.tables.Nomenclatures;
import db.tables.Organizations;
import db.tables.Positions;
import db.tables.records.FlywaySchemaHistoryRecord;
import db.tables.records.InvoicesRecord;
import db.tables.records.NomenclaturesRecord;
import db.tables.records.OrganizationsRecord;
import db.tables.records.PositionsRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * public.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<InvoicesRecord> INVOICE_PK = Internal.createUniqueKey(Invoices.INVOICES, DSL.name("invoice_pk"), new TableField[] { Invoices.INVOICES.NUMBER }, true);
    public static final UniqueKey<NomenclaturesRecord> NOMENCLATURES_PK = Internal.createUniqueKey(Nomenclatures.NOMENCLATURES, DSL.name("nomenclatures_pk"), new TableField[] { Nomenclatures.NOMENCLATURES.COD_ID }, true);
    public static final UniqueKey<OrganizationsRecord> ORGANIZATIONS_PK = Internal.createUniqueKey(Organizations.ORGANIZATIONS, DSL.name("organizations_pk"), new TableField[] { Organizations.ORGANIZATIONS.INN }, true);
    public static final UniqueKey<PositionsRecord> POSITIONS_PK = Internal.createUniqueKey(Positions.POSITIONS, DSL.name("positions_pk"), new TableField[] { Positions.POSITIONS.NOMENCLATURE_ID, Positions.POSITIONS.NUMBER_INVOICE }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PositionsRecord, InvoicesRecord> POSITIONS__INVOICE_FK = Internal.createForeignKey(Positions.POSITIONS, DSL.name("invoice_fk"), new TableField[] { Positions.POSITIONS.NUMBER_INVOICE }, Keys.INVOICE_PK, new TableField[] { Invoices.INVOICES.NUMBER }, true);
    public static final ForeignKey<PositionsRecord, NomenclaturesRecord> POSITIONS__NOMENCLATURE_FK = Internal.createForeignKey(Positions.POSITIONS, DSL.name("nomenclature_fk"), new TableField[] { Positions.POSITIONS.NOMENCLATURE_ID }, Keys.NOMENCLATURES_PK, new TableField[] { Nomenclatures.NOMENCLATURES.COD_ID }, true);
}
